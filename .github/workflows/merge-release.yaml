---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation

name: "🤖 Automatic Release [Merge]"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
    paths:
      - "**"
      # Temporarily comment these during testing
      #- "!.github/**"
      #- "!.*"
      #- "!pdm.lock"
      #- "!tox.ini"

permissions: {}

jobs:
  pull-request-merged:
    name: "Pull Request Merged"
    runs-on: "ubuntu-24.04"
    permissions:
      contents: read
    steps:
      # yamllint disable-line rule:line-length
      - uses: os-climate/osc-github-devops/.github/actions/git-last-commit-action@main

      - name: "Summary Output"
        shell: bash
        run: |
          # Report: Last Merged Pull Request

          # shellcheck disable=SC2129

          echo "# 🗞️ Report: Last Merged Pull Request" >> "$GITHUB_STEP_SUMMARY"
          echo "⏱️ Latest commit: ${{ env.latest_commit_sha }}" >> "$GITHUB_STEP_SUMMARY"
          echo "⏪ Previous commit: ${{ env.previous_commit_sha }}" >> "$GITHUB_STEP_SUMMARY"

          FILES_CHANGED="${{ env.files_changed }}"
          if [ -n "$FILES_CHANGED" ]; then
            echo "## 📁 Files Changed" >> "$GITHUB_STEP_SUMMARY"
            echo "$FILES_CHANGED" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: "Check: pyproject.toml"
        id: trap-version-bump-pyproject-toml
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/string-in-multiline-text-action@main
        with:
          string: "pyproject.toml"
          multiline_text: "${{ env.files_changed }}"

      - name: "Check: setup.py"
        id: trap-version-bump-setup-py
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/string-in-multiline-text-action@main
        with:
          string: "setup.py"
          multiline_text: "${{ env.files_changed }}"

      # - name: "Intermediate step to check if version changed"
      #   id: parse-version
      #   uses: os-climate/osc-github-devops/.github/actions/python-project-version-action@main

      # - name: "Intermediate step to check if tag already exists"
      #   id: parse-version
      #   uses: os-climate/osc-github-devops/.github/actions/python-project-version-action@main

      - name: "Extract Version"
        id: parse-project
        if: steps.trap-version-bump-pyproject-toml.outputs.match == 'true'
        uses: os-climate/osc-github-devops/.github/actions/python-project-version-action@main

      - name: "Configure GIT"
        # yamllint disable-line rule:line-length
        uses: lfit/releng-reusable-workflows/.github/actions/git-configure-action@fd9bc3881956c2645d4da312079580d331f562ed # v0.2.2

      - name: "Push Tag, Trigger Release"
        uses: actions-ecosystem/action-push-tag@6e82caefe706f5a729e354df7443dc82f98a414f # v1.0.0
        if: steps.trap-version-bump-pyproject-toml.outputs.match == 'true'
        with:
          tag: ${{ steps.parse-project.outputs.python_project_version }}
          # yamllint disable-line rule:line-length
          message: "${{ steps.parse-project.outputs.python_project_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}"
