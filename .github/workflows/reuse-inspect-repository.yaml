---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

name: '[R] Repository Content'

# yamllint disable-line rule:truthy
on:
  workflow_call:
    outputs:
      # Basic repository metadata
      repository_owner:
        description: 'GitHub user/organisation owning the repository'
        value: ${{ jobs.repository.outputs.repository_owner }}
      repository_name:
        description: 'The Repository name'
        value: ${{ jobs.repository.outputs.repository_name }}
      # Repository content classifications
      python_project:
        value: "${{ jobs.repository.outputs.python_project }}"
      go_project:
        value: "${{ jobs.repository.outputs.go_project }}"
      node_js_project:
        value: "${{ jobs.repository.outputs.node_js_project }}"
      maven_config:
        value: "${{ jobs.repository.outputs.maven_config }}"
      gradle_config:
        value: "${{ jobs.repository.outputs.gradle_config }}"
      tox_config:
        value: "${{ jobs.repository.outputs.tox_config }}"
      jupyter_notebooks:
        value: "${{ jobs.repository.outputs.jupyter_notebooks }}"
      makefile:
        value: "${{ jobs.repository.outputs.makefile }}"
      cmake_config:
        value: "${{ jobs.repository.outputs.cmake_config }}"
      dockerfile:
        value: "${{ jobs.repository.outputs.dockerfile }}"

permissions: {}

jobs:
  repository:
    name: 'Check content'
    runs-on: 'ubuntu-24.04'
    outputs:
      # Repository metadata
      repository_owner: ${{ steps.repository.outputs.repository_owner }}
      repository_name: ${{ steps.repository.outputs.repository_name }}
      # Repository content
      python_project: ${{ steps.content.outputs.python_project }}
      go_project: ${{ steps.content.outputs.python_project }}
      node_js_project: ${{ steps.content.outputs.node_js_project }}
      maven_config: ${{ steps.content.outputs.maven_config }}
      gradle_config: ${{ steps.content.outputs.gradle_config }}
      tox_config: ${{ steps.content.outputs.tox_config }}
      jupyter_notebooks: ${{ steps.content.outputs.jupyter_notebooks }}
      makefile: ${{ steps.content.outputs.makefile }}
      cmake_config: ${{ steps.content.outputs.cmake_config }}
      dockerfile: ${{ steps.content.outputs.dockerfile }}
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      # Harden the runner used by this workflow
      - uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: 'audit'

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Repository metadata'
        id: repository
        # yamllint disable-line rule:line-length
        uses: lfit/releng-reusable-workflows/.github/actions/repository-metadata-action@fdcd10bc0fe174fe7d8834b2ba3a30159b4bf0bf # v0.2.14

      - name: 'Classify content'
        id: content
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/repository-content-action@461328d4ed1c3c4d479b53de76b5b73c094b08d2 # v0.1.0
