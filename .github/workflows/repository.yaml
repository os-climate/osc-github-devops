---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🔍 [R] Repository"

# yamllint disable-line rule:truthy
on:
  workflow_call:
    outputs:
      # Basic repository metadata
      repository_owner:
        description: "GitHub user or organisation owning the repository"
        value: ${{ jobs.repository.outputs.repository_owner }}
      repository_name:
        description: "The Repository name"
        value: ${{ jobs.repository.outputs.repository_name }}

      # tag_push_event: ${{ steps.repository.outputs.tagged }}

      # Repository content classifications
      python_project:
        value: ${{ jobs.repository.outputs.python_project }}
      node_js_project:
        value: ${{ jobs.repository.outputs.node_js_project }}
      maven_config:
        value: ${{ jobs.repository.outputs.maven_config }}
      gradle_config:
        value: ${{ jobs.repository.outputs.gradle_config }}
      jupyter_notebooks:
        value: ${{ jobs.repository.outputs.jupyter_notebooks }}
      tox_config:
        value: ${{ jobs.repository.outputs.tox_config }}

jobs:
  repository:
    name: "Check Content"
    runs-on: ubuntu-latest
    outputs:
      # Repository metadata
      repository_owner: ${{ steps.repository.outputs.repository_owner }}
      repository_name: ${{ steps.repository.outputs.repository_name }}

      # Classify content
      python_project: ${{ steps.content.outputs.python_project }}
      node_js_project: ${{ steps.content.outputs.node_js_project }}
      maven_config: ${{ steps.content.outputs.maven_config }}
      gradle_config: ${{ steps.content.outputs.gradle_config }}
      jupyter_notebooks: ${{ steps.content.outputs.jupyter_notebooks }}
      tox_config: ${{ steps.content.outputs.tox_config }}

      # Label verification
      # present: ${{ steps.labels.outputs.present }}
      # created: ${{ steps.labels.outputs.created }}

      # Tag metadata - to be removed/replaced
      current_tag: "v0.1.0" # Placeholder value
      tag_validity: "v0.1.0" # Placeholder value
      development_tag: "v0.1.0" # Placeholder value
      production_tag: "v0.1.0" # Placeholder value
      prerelease: "v0.1.0" # Placeholder value

    permissions:
      # Required for action to create labels: github-mandatory-labels
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: "Repository metadata"
        id: repository
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/repository-metadata@main

      - name: "Classify content"
        id: content
        # yamllint disable-line rule:line-length
        uses: os-climate/osc-github-devops/.github/actions/repository-content@main

      - name: "Verify pushed tag"
        id: tag-validate
        if: startsWith(github.ref, 'refs/tags/')
        # if: contains(github.event.head_commit.message, '[release]')
        uses: os-climate/osc-github-devops/.github/actions/semantic-tag-validate@mail
        with:
          tag: startsWith(github.ref, 'refs/tags/')

      - name: "Output pushed tag"
        id: tag-output
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Output pushed tag
          echo "Tag push: ${{ github.ref_name }}"
          if [ ${{ steps.tag-validate.outputs.semantic }} == 'true' ]; then
            echo "Tag passed semantic check"
            echo "pushed_tag=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
            echo "### Semantic tag pushed: ${{ github.ref_name }}" >> "$GITHUB_STEP_SUMMARY"
          fi

      #- name: "Verify/create labels"
      #  id: labels
      #  # yamllint disable-line rule:line-length
      #  uses: os-climate/osc-github-devops/.github/actions/github-labels@main
