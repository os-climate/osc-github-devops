---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🔍 Repository Checks"
description: "Scans repository content and identifies supported content"

outputs:
  PYTHON_PROJECT:
    description: "Repository contains a Python project with file: pyproject.toml"
    value: ${{ steps.content.outputs.python_project }}
  NODE_JS_PROJECT:
    description: "Repository contains a Node.js project with file: package.json"
    value: ${{ steps.content.outputs.node_js_project }}
  MAVEN_CONFIG:
    description: "Repository contains Maven project with file: pom.xml"
    value: ${{ steps.content.outputs.maven_config }}
  GRADLE_CONFIG:
    description: "Repository contains Gradle project with file(s): settings.gradle*"
    value: ${{ steps.content.outputs.gradle_config }}
  JUPYTER_NOTEBOOKS:
    description: "Repository contains Jupyter Notebooks with file(s): *.ipynb"
    value: ${{ steps.content.outputs.jupyter_notebooks }}
  TOX_CONFIG:
    description: "Repository contains a TOX configuration file: tox.ini"
    value: ${{ steps.content.outputs.tox_config }}

runs:
  using: "composite"
  steps:
    - name: "Inpect repository content"
      id: content
      shell: bash
      run: |
        #/usr/bin/env bash
        # Inpect repository content

        #SHELLCODESTART

        # Allows for testing from a local shell
        if [ -z "$GITHUB_OUTPUT" ]; then
          echo "Running from a shell, NOT workflow"
          export GITHUB_OUTPUT="/dev/null"
          export GITHUB_ENV="/dev/null"
          TMPFILE=$(mktemp -p /tmp --suffix "github-summary-output.txt")
          export GITHUB_STEP_SUMMARY="$TMPFILE"
        fi

        # Check for Python project metadata files
        if [ -f pyproject.toml ] || [ -f setup.py ]; then
          PYTHON_PROJECT="true"
        else
          PYTHON_PROJECT="false"
        fi

        # Check for Node.JS package description
        if [ -f package.json ]; then
          NODE_JS_PROJECT="true"
        else
          NODE_JS_PROJECT="false"
        fi

        # Check for Maven config: pom.xml
        if [ -f pom.xml ]; then
          MAVEN_CONFIG="true"
        else
          MAVEN_CONFIG="false"
        fi

        # Check for Gradle settings files: settings.gradle*
        GRADLE_COUNT=$(find . -name 'settings.gradle*' | wc -l )
        if [ "$GRADLE_COUNT" -ne 0 ]; then
          GRADLE_CONFIG="true"
        else
          GRADLE_CONFIG="false"
        fi

        # Check for TOX configuration: tox.ini
        if [ -f tox.ini ]; then
          TOX_CONFIG="true"
        else
          TOX_CONFIG="false"
        fi

        # Check for Jupyter Notebooks: *.ipynb
        NOTEBOOK_COUNT=$(find . -name '*.ipynb' | wc -l )
        if [ "$NOTEBOOK_COUNT" -ne 0 ]; then
          JUPYTER_NOTEBOOKS="true"
        else
          JUPYTER_NOTEBOOKS="false"
        fi

        ### Set Outputs ###

        echo "python_project=$PYTHON_PROJECT" >> "$GITHUB_OUTPUT"
        echo "node_js_project=$NODE_JS_PROJECT" >> "$GITHUB_OUTPUT"
        echo "maven_config=$MAVEN_CONFIG" >> "$GITHUB_OUTPUT"
        echo "gradle_config=$GRADLE_CONFIG" >> "$GITHUB_OUTPUT"
        echo "tox_config=$TOX_CONFIG" >> "$GITHUB_OUTPUT"
        echo "jupyter_notebooks=$JUPYTER_NOTEBOOKS" >> "$GITHUB_OUTPUT"

        ### GitHub Summary ###

        echo '# 🔍 Repository Content Inspection' >> "$GITHUB_STEP_SUMMARY"

        # The hack below helps make the displayed output summary pretty

        for VARIABLE in $(declare | grep REPO); do
          VAR_NAME=$(echo "$VARIABLE" | awk -F= '{print $1}')
          VAR_BOOLEAN=$(echo "$VARIABLE" | awk -F= '{print $2}')
          if [ "$VAR_BOOLEAN" = "true" ]; then
            VAR_BOOLEAN="✅"
          else
            VAR_BOOLEAN="❌"
          fi
          export $VAR_NAME="$VAR_BOOLEAN"
        done

        echo "Supported content types are listed in the table below" >> "$GITHUB_STEP_SUMMARY"

        echo "| Status | Support Content Type |" >> "$GITHUB_STEP_SUMMARY"
        echo "| -------- | ------- |" >> "$GITHUB_STEP_SUMMARY"
        echo "| $PYTHON_PROJECT | Python Project |" >> "$GITHUB_STEP_SUMMARY"
        echo "| $NODE_JS_PROJECT | Node.js Project |" >> "$GITHUB_STEP_SUMMARY"
        echo "| $MAVEN_CONFIG | Maven Configuration |" >> "$GITHUB_STEP_SUMMARY"
        echo "| $GRADLE_CONFIG | Gradle Configuration |" >> "$GITHUB_STEP_SUMMARY"
        echo "| $TOX_CONFIG | Tox Configuration |" >> "$GITHUB_STEP_SUMMARY"
        echo "| $JUPYTER_NOTEBOOKS | Jupyter Notebooks |" >> "$GITHUB_STEP_SUMMARY"

        # Displays summary text to the terminal when run from a shell
        if [ -f "$TMPFILE" ]; then
          cat "$TMPFILE"
        fi

        #SHELLCODEEND
