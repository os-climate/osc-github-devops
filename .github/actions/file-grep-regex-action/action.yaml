---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation

name: "Extract string from file using GREP"
description: "Uses grep, flags, and a regular expression to extract text from a file"

inputs:
  # Mandatory
  FLAGS:
    description: "Flags to use with grep command"
    required: false
    default: "-E"
  REGEX:
    description: "Regular expression used to extract string"
    required: true
  FILENAME:
    description: "File containing text to extract"
    required: true
  # Optional
  NO_FAIL:
    description: "Override errors if file not found or no value returned"
    required: false
    default: "false"

outputs:
  EXTRACTED_STRING:
    description: "The string extracted by the regular expression"
    value: ${{ steps.grep.outputs.extracted_string }}

runs:
  using: "composite"
  steps:
    - name: "Extract text/string from file"
      id: grep
      shell: bash
      run: |
        # Extract text/string from file

        #SHELLCODESTART

        # Allows for testing from a local shell
        if [ -z "$GITHUB_OUTPUT" ]; then
          echo "Running from a shell, NOT workflow"
          export GITHUB_OUTPUT="/dev/null"
          export GITHUB_ENV="/dev/null"
          if [ $# -ne 3 ]; then
            echo "Error: invalid arguments specified"
            echo "Usage:  $0 [flags] [regex] [filename]"; exit 1
          else
            set -o noglob
            FLAGS="$1"
            REGEX="$2"
            FILENAME="$3"
            set +o noglob
          fi
        else
          set -o noglob
          FLAGS="${{ inputs.FLAGS }}"
          REGEX='${{ inputs.REGEX }}'
          FILENAME="${{ inputs.FILENAME }}"
          set +o noglob
        fi

        if [ ! -f "$FILENAME" ]; then
          echo "Error: file not found [$FILENAME]"
          if [ "${{ inputs.NO_FAIL }} = "true" ]; then
            exit 0
          else
            exit 1
          fi
        fi

        set -o noglob
        echo "Flags to grep command: $FLAGS"
        echo "Regular expression to use: $REGEX"
        echo "File to search: $FILENAME"

        # Extract the string using grep and regex
        STRING=$(grep $FLAGS '${{ inputs.REGEX }}' $FILENAME)
        set +o noglob

        if [ -z "$STRING" ]; then
          echo "String extraction failed; no matching value found ❌"
          if [ "${{ inputs.NO_FAIL }} = "true" ]; then
            exit 0
          else
            exit 1
          fi
        else
          # Make string available as action output
          echo "extracted_string=$STRING" >> "$GITHUB_OUTPUT"
          echo "Extracted string: $STRING ✅"
        fi

        #SHELLCODEEND
