---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🏷️ Gerrit Change-Id"

outputs:
  CHANGE_ID_LINE:
    description: "Entire line string for Change-Id message"
    value: ${{ steps.validate.outputs.change_id_line }}
  CHANGE_ID_VALUE:
    description: "Just the SHA value with prefix (letter I)"
    value: ${{ steps.validate.outputs.change_id_value }}

runs:
  using: "composite"
  steps:
    - name: "Generate a Gerrit Change-Id"
      id: change-id
      shell: bash
      run: |
        # Generate a Gerrit Change-Id

        #SHELLCODESTART

        # Allows for testing from a local shell
        if [ -z "$GITHUB_OUTPUT" ]; then
          echo "Running from a shell, NOT workflow"
          export GITHUB_OUTPUT="/dev/null"
          export GITHUB_ENV="/dev/null"
          TMPFILE=$(mktemp -p /tmp --suffix "-github-summary-output.txt")
          export GITHUB_STEP_SUMMARY="$TMPFILE"
        fi

        # Based on the existing shell code used by the Gerrit commit hook
        # Documentation here: https://gerrit-review.googlesource.com/Documentation/user-changeid.html
        # Source code for their implementation:
        # https://gerrit.googlesource.com/gerrit/+/refs/heads/master/resources/com/google/gerrit/server/tools/root/hooks/commit-msg

        if git rev-parse --verify HEAD >/dev/null 2>&1; then
          refhash="$(git rev-parse HEAD)"
        else
          refhash="$(git hash-object -t tree /dev/null)"
        fi
        random=$({ git var GIT_COMMITTER_IDENT ; echo "$refhash" ; } | git hash-object --stdin)

        ### GitHub Output ###

        echo "CHANGE_ID_VALUE=I$random" >> "$GITHUB_ENV"
        echo "CHANGE_ID_VALUE=I$random" >> "$GITHUB_OUTPUT"
        echo "CHANGE_ID_LINE=Change-Id: I$random" >> "$GITHUB_ENV"
        echo "CHANGE_ID_LINE=Change-Id: I$random" >> "$GITHUB_OUTPUT"

        ### GitHub Summary ###

        echo '# 🏷️ Gerrit Change-Id' >> "$GITHUB_STEP_SUMMARY"
        echo '```shell' >> "$GITHUB_STEP_SUMMARY"
        echo "Change-Id: I$random" >> "$GITHUB_STEP_SUMMARY"
        echo '```' >> "$GITHUB_STEP_SUMMARY"

        # Displays summary text to the terminal when run from a shell
        if [ -f "$TMPFILE" ]; then
          cat "$TMPFILE"
          rm "$TMPFILE"
        fi

        #SHELLCODEEND
