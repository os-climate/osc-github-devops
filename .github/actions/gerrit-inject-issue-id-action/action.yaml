---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation

name: "🏷️ Check/Inject Issue-ID"

inputs:
  # Required
  COMMIT_MESSAGE_BODY:
    description: "Commit message body to amend"
    type: string
    required: true
  ISSUE_ID_LOOKUP_JSON:
    description: "JSON lookup table mapping users to JIRA tickets"
    type: string
    required: true
  # Optional
  COMMIT_USER_NAME:
    description: "User used to perform the commit"
    type: string
    required: false
    default: "github-actions[bot]"
  COMMIT_USER_EMAIL:
    description: "User used to perform the commit"
    type: string
    required: false
    default: "41898282+github-actions[bot]@users.noreply.github.com"

outputs:
  PRESENT:
    description: "Whether the Issue-ID string is present"
    value: ${{ steps.fetch.outputs.count }}

runs:
  using: "composite"
  steps:
    - name: "Checkout Pull Request"
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: "Check commit message for required string"
      id: check
      shell: bash
      run: |
        # Check commit message for required string

        # Gerrit reg-ex expression is:
        # Issue-ID: ([A-Z][A-Z0-9]{1,9}-\\d+)

        COMMIT_MESSAGE="${{ inputs.COMMIT_MESSAGE_BODY }}"
        if [[ "$COMMIT_MESSAGE" =~ "Issue-ID: " ]]; then
          echo "✅ Issue-ID was found in the pull request"
          echo "PRESENT=true" >> "$GITHUB_ENV"
          echo "PRESENT=true" >> "$GITHUB_OUTPUT"
        else
          echo "❌ Issue-ID was NOT found in the pull request"
          echo "PRESENT=false" >> "$GITHUB_ENV"
          echo "PRESENT=false" >> "$GITHUB_OUTPUT"
        fi

    - name: "Looking up appropriate JIRA ticket for this change"
      id: lookup
      shell: bash
      run: |
        # Look up appropriate JIRA ticket for this change
        ACTOR="${{ github.actor }}"
        ACTOR_ID="${{ github.actor_id }}"
        echo "Actor: $ACTOR [$ACTOR_ID]"
        echo "key=$ACTOR" >> "$GITHUB_ENV"

    - name: "Get Issue-ID from JSON variable"
      uses: os-climate/osc-github-devops/.github/actions/json-var-key-value-lookup@main
      with:
        variable: ISSUE_ID_LOOKUP_JSON
        key: ${{ env.key }}

    - name: "Injecting Issue-ID into body of first commit message"
      id: inject
      if: env.PRESENT == 'false'
      shell: bash
      run: |
        # Injecting Issue-ID into body of first commit
        # git fetch; git pull
        # gh pr checkout 23
        git config user.name "${{ inputs.COMMIT_USER_NAME }}"
        git config user.email "${{ inputs.COMMIT_USER_EMAIL }}"
        git commit --amend -m"${{ inputs.COMMIT_MESSAGE_BODY }}" -m"Issue-ID: ${{ env.value }}" --no-verify --no-edit
        git push --force
