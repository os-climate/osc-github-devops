---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# python-project-audit-matrix
name: "üîç Python Audit"
description: "Audit Python dependencies for known vulnerabilities"

inputs:
  #¬†Mandatory
  # A matrix Python build version should be passed as input
  PYTHON_VERSION:
    description: "Python version used to perform audit"
    required: true
  # Optional
  NEVER_FAIL:
    description: "Continue even when an audit fails"
    required: false
    default: false
  ARTEFACT_PATH:
    description: "Path/location to build artefacts"
    type: string
    required: false
    default: "dist"
  SUMMARY:
    description: "Whether to generate summary output"
    type: boolean
    required: false
    default: true
  PATH_PREFIX:
    description: "Directory location containing project code"
    type: string
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: "Checkout repository"
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: "Extract Python project naming/metadata"
      id: naming
      # yamllint disable-line rule:line-length
      uses: lfreleng-actions/python-project-name-action@56072b5e9311b06d6be1631f683d397b6d60e48f # v0.1.0

    - name: "‚¨á Download build artefacts"
      # yamllint disable-line rule:line-length
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: ${{ env.python_project_name }}
        path: ${{ inputs.ARTEFACT_PATH }}

    - name: "Set up Python ${{ inputs.python_version }}"
      # yamllint disable-line rule:line-length
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: ${{ inputs.python_version }}

    - name: "Install build products/dependencies"
      shell: bash
      run: |
        # Install build products/dependencies
        echo "Upgrading: pip, setuptools"
        python -m pip install -q --upgrade pip setuptools
        echo "Installing built package(s) and dependencies"
        for wheel in ${{ inputs.ARTEFACT_PATH }}/*.whl; do
                pip install -q "$wheel"
        done
        if [ -f requirements.txt ]; then
          echo "Installing dependencies from: requirements.txt"
          pip install -q -r requirements.txt
        fi

    - name: "Auditing with: pip audit"
      uses: pypa/gh-action-pip-audit@1220774d901786e6f652ae159f7b6bc8fea6d266 # v1.1.0
      with:
        inputs: ${{ inputs.path_prefix }}
        summary: ${{ inputs.summary }}
